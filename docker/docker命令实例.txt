镜像操作：
docker images									#列出本地主机上的镜像
docker search 某个XXX镜像名字						#搜索镜像
docker pull 镜像名字[:TAG]						#下载镜像	
docker rmi 某个XXX镜像名字ID						#删除镜像	

容器操作：	
docker run [OPTIONS] IMAGE [COMMAND] [ARG...]	新建并启动容器	
	OPTIONS说明（常用）：有些是一个减号，有些是两个减号
		--name="容器新名字": 为容器指定一个名称；
		-d: 后台运行容器，并返回容器ID，也即启动守护式容器；
		-i：以交互模式运行容器，通常与 -t 同时使用；
		-t：为容器重新分配一个伪输入终端，通常与 -i 同时使用；
		-P: 随机端口映射；
		-p: 指定端口映射，有以下四种格式
      		ip:hostPort:containerPort
      		ip::containerPort
      		hostPort:containerPort
      		containerPort
docker ps [OPTIONS]								#列出当前所有正在运行的容器
	OPTIONS说明（常用）：
		-a :列出当前所有正在运行的容器+历史上运行过的
		-l :显示最近创建的容器。
		-n：显示最近n个创建的容器。
		-q :静默模式，只显示容器编号。
		--no-trunc :不截断输出。
docker start 容器ID或者容器名						启动容器
docker restart 容器ID或者容器名					重启容器
docker stop 容器ID或者容器名						停止容器
docker kill 容器ID或者容器名						强制停止容器
docker rm 容器ID  								删除已停止的容器
docker logs -f -t --tail 容器ID  				查看容器日志		
		*   -t 是加入时间戳	
		*   -f 跟随最新的日志打印
		*   --tail 数字 显示最后多少条
docker top 容器ID   								查看容器内运行的进程
docker top 容器ID 								查看容器内运行的进程
docker inspect 容器ID 							查看容器内部细节
进入正在运行的容器并以命令行交互					
	docker exec -it 容器ID bashShell
		exec 是在容器中打开新的终端，并且可以启动新的进程
	重新进入docker attach 容器ID 					
		attach 直接进入容器启动命令的终端，不会启动新的进程
docker cp  容器ID:容器内路径 目的主机路径			从容器内拷贝文件到主机上
docker commit									提交容器副本使之成为一个新的镜像
	docker commit -m=“提交的描述信息” -a=“作者” 容器ID 要创建的目标镜像名:[标签名]
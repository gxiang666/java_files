<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 通过引用注入 -->
	<bean id="userService" class="com.tnti.service.UserService">
		<property name="user" ref="userID1"></property>
	</bean>
	
	<!-- 通过set方法注入值，注意一定要有空参数的构造器 -->
	<bean id="userID1" class="com.tnti.bean.User">
		<property name="name" value="gx"></property>
		<property name="adress" value="tianjin"></property>
		<property name="age" value="23"></property>
	</bean>
	
	<!-- 构造方法注入 
        * <constructor-arg> 用于配置构造方法一个参数argument
            name ：参数的名称
            index ：参数的索引号，从0开始 。如果只有索引，匹配到了多个构造方法时，默认使用第一个。
            type ：确定参数类型
            
            value：设置普通数据
            ref：引用数据，一般是另一个bean id值
	-->
	<bean id="userID2" class="com.tnti.bean.User">
		<constructor-arg name="name" value="gx"></constructor-arg>
		<constructor-arg name="adress" value="tianjin"></constructor-arg>
		<constructor-arg name="age" value="23"></constructor-arg>
	</bean>
	
	<bean id="userID3" class="com.tnti.bean.User">
		<constructor-arg index="0" value="tianjin"></constructor-arg>
		<constructor-arg index="1" value="23"></constructor-arg>
		<constructor-arg index="2" value="gx"></constructor-arg>
	</bean>
	
	<bean id="userID4" class="com.tnti.bean.User">
		<constructor-arg index="0" type="java.lang.String" value="tianjin"></constructor-arg>
		<constructor-arg index="1" type="java.lang.Integer" value="23"></constructor-arg>
		<constructor-arg index="2" type="java.lang.String" value="gx"></constructor-arg>
	</bean>
		
	<!-- 
 	集合的注入都是给<property>添加子标签
		数组：<array>
            List：<list>
            Set：<set>
            Map：<map> ，map存放k/v 键值对，使用<entry>描述
            Properties：<props>  <prop key=""></prop>  

		普通数据：<value>
		引用数据：<ref>
    -->
	<bean id="collDataId" class="com.itheima.f_xml.e_coll.CollData" >
        <property name="arrayData">
            <array>
                <value>DS</value>
                <value>DZD</value>
                <value>屌丝</value>
                <value>屌中屌</value>
            </array>
        </property>

        <property name="listData">
            <list>
                <value>于嵩楠</value>
                <value>曾卫</value>
                <value>杨煜</value>
                <value>曾小贤</value>
            </list>
        </property>

        <property name="setData">
            <set>
                <value>停封</value>
                <value>薄纸</value>
                <value>关系</value>
            </set>
        </property>

        <property name="mapData">
            <map>
                <entry key="jack" value="杰克"></entry>
                <entry>
                    <key><value>rose</value></key>
                    <value>肉丝</value>
                </entry>
            </map>
        </property>

        <property name="propsData">
            <props>
                <prop key="高富帅">嫐</prop>
                <prop key="白富美">嬲</prop>
                <prop key="男屌丝">挊</prop>
            </props>
        </property>
    </bean>
    
<!-- 5 依赖注入装配Bean 基于注解
	注解：就是一个类，使用@注解名称
	开发中：使用注解 取代 xml配置文件。 
	1.@Component取代<bean class=""> 
		@Component("id") 取代 <bean id="" class=""> 
	2.web开发，提供3个@Component注解衍生注解（功能一样）取代 
		@Repository ：dao层 
		@Service：service层 
		@Controller：web层 
	3.依赖注入，给私有字段设值，也可以给setter方法设值
		普通值：@Value(" ")
		引用值： 
		方式1：按照【类型】注入 
			@Autowired 
		方式2：按照【名称】注入1 
			@Autowired 
			@Qualifier("名称") 
		方式3：按照【名称】注入2 
			@Resource("名称") 
	4.生命周期 
		初始化：@PostConstruct 
		销毁：@PreDestroy 
	5.作用域 
		@Scope("prototype") 多例 
		注解使用前提，添加命名空间，让spring扫描含有注解类 
	
	<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                       http://www.springframework.org/schema/beans/spring-beans.xsd
	                       http://www.springframework.org/schema/context 
	                       http://www.springframework.org/schema/context/spring-context.xsd">
	组件扫描，扫描含有注解的类
	<context:component-scan base-package="com.itheima.g_annotation.a_ioc"></context:component-scan>
	</beans> -->

    
</beans>